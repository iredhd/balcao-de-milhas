// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum bid_direction {
  BUY
  SELL
}

model bid {
  id Int @id @default(autoincrement())
  created_at DateTime @default(now())
  offer_id Int @unique
  amount Int
  price Decimal
  company String
  pax Int
  cancell_return_percentage Decimal
  direction bid_direction
  is_vcm Boolean
  recommendations Int @default(0)
  claims Int @default(0)
  member_since DateTime @default(now())
  is_mastermiles Boolean @default(false)
  is_mentoria Boolean @default(false)
  number_of_communities Int @default(1)
  date_of_first_join DateTime? @default(now())
}

model news {
  id Int @id @default(autoincrement())
  created_at DateTime @default(now())
  title String
  link String
  description String? @db.LongText
}

enum log_method {
  GET
  PUT
  POST
  DELETE
  PATCH
  HEAD
  OPTIONS
  TRACE
}

model log {
  id Int @id @default(autoincrement())
  created_at DateTime @default(now())
  ip String
  url String @db.LongText
  headers Json 
  body Json
  method log_method
}

model device {
  id Int @id @default(autoincrement())
  created_at DateTime @default(now())
  build_id String? @unique
  device_info Json 
  push_token String? @unique
}

model order {
  id Int @id @default(autoincrement())
  created_at DateTime @default(now())
  transaction String @unique()
  buyer_id Int
  buyer buyer @relation(fields: [buyer_id], references: [id])
}

model buyer {
  id Int @id @default(autoincrement())
  created_at DateTime @default(now())
  name String
  email String @unique()
  document String?
  external_id String? @unique()
  orders order[]
  buyer_verification buyer_verification?
}

enum buyer_verification_status {
  PENDING
  COMPLETED
  DENIED
  APPROVED
}
model buyer_verification {
  id Int @id @default(autoincrement())
  created_at DateTime @default(now())
  external_id String? @unique()
  status buyer_verification_status @default(PENDING)
  buyer_id Int @unique()
  buyer buyer @relation(fields: [buyer_id], references: [id])
}